{"componentChunkName":"component---src-templates-blog-post-js","path":"/zoom and pan 2/","result":{"data":{"site":{"siteMetadata":{"title":"Yong-log"}},"markdownRemark":{"id":"517732dd-55e8-5a7e-8c38-3042a26f3b3d","excerpt":"지난 포스트에 이어 나머지 기능도 구현해보자.\n\n이번엔 드래그와 드래그 시 경계를 벗어나지 않도록하는 bounding 기능을 구현해보겠다.\n 드래그 기능자체는 일반 Drag 기능과 크게 다르지 않았다.\n\n 우선 드래그 시작시 마우스 좌표와 target…","html":"</br>\n<p>지난 포스트에 이어 나머지 기능도 구현해보자.\n</br>\n이번엔 드래그와 드래그 시 경계를 벗어나지 않도록하는 bounding 기능을 구현해보겠다.\n</br></p>\n<p>드래그 기능자체는 일반 Drag 기능과 크게 다르지 않았다.\n</br>\n</br></p>\n<p>우선 드래그 시작시 마우스 좌표와 target의 좌표를 저장할 변수를 생성하고\n</br>\n<code class=\"language-text\">mousedown</code>, <code class=\"language-text\">mousemove</code>, <code class=\"language-text\">mouseup</code> 각 이벤트에 대해 로직을 추가해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//mouse</span>\n<span class=\"token keyword\">let</span> startX<span class=\"token punctuation\">,</span> startY<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//target</span>\n<span class=\"token keyword\">let</span> initialX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> initialY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> scale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">let</span> tempX<span class=\"token punctuation\">,</span> tempY<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    viewer<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousedown'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        startX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">;</span>\n        startY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">;</span>\n        isDragging <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>현재 마우스 위치에서 초기 마우스 위치를 빼서 이동한 거리 <code class=\"language-text\">moveX</code>, <code class=\"language-text\">moveY</code>를 계산한다.\n</br></p>\n<p>이 값을 초기 위치에 더해 <code class=\"language-text\">target</code>이 이동할 새 위치<code class=\"language-text\">newPosX</code>, <code class=\"language-text\">newPosY</code>를 계산하고, 이를 <code class=\"language-text\">transform</code> 스타일을 통해 적용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">viewer<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isDragging<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> moveX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">-</span> startX<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> moveY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">-</span> startY<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> newPosX <span class=\"token operator\">=</span> moveX <span class=\"token operator\">+</span> initialX\n        <span class=\"token keyword\">let</span> newPosY <span class=\"token operator\">=</span> moveY <span class=\"token operator\">+</span> initialY\n\n        target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translateX(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newPosX<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px) translateY(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>newPosY<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px) scale(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>scale<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n        tempX <span class=\"token operator\">=</span> newPosX\n        tempY <span class=\"token operator\">=</span> newPosY\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">newPosX</code>, <code class=\"language-text\">newPosY</code> 는 mousemove가 실행되는 동안은 <code class=\"language-text\">tempX</code>, <code class=\"language-text\">tempY</code>에 저장된다.\n</br></p>\n<p>이후 mouseup 이벤트가 발생하면 <code class=\"language-text\">tempX</code>, <code class=\"language-text\">tempY</code>에 있는 값들을 <code class=\"language-text\">initialX</code>, <code class=\"language-text\">initialY</code>에 저장한다.\n</br></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseup'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isDragging<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        initialX <span class=\"token operator\">=</span> tempX<span class=\"token punctuation\">;</span>\n        initialY <span class=\"token operator\">=</span> tempY<span class=\"token punctuation\">;</span>\n        isDragging <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>cursor <span class=\"token operator\">=</span> <span class=\"token string\">'grab'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>그럼 요렇게 드래그는 잘 동작한다!\n</br>\n근데 <code class=\"language-text\">target</code>의 모서리가가 <code class=\"language-text\">viewer</code>의 모서리 안쪽까지 드래그 되는것을 볼 수 있다.</p>\n<img src=\"https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/zoom+and+pan/bound.gif\" width=\"1000\" height=\"400\">\n<br>\n<p>그럼 이제 bounding을 적용해보자.\n</br></p>\n<p>우선 <code class=\"language-text\">updateLimits</code> 라는 함수를 만든다.\n</br>\n함수가 실행되면 <code class=\"language-text\">viewer</code>의 모서리에서 <code class=\"language-text\">target</code>의 모서리까지 상하좌우로 움직일 수 있는 거리를 계산하고 객체로 변수에 그 값을 저장할것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> dragLimits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateLimits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> vRect <span class=\"token operator\">=</span> viewer<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> tRect <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    dragLimits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">minX</span><span class=\"token operator\">:</span> vRect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">-</span> tRect<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">maxX</span><span class=\"token operator\">:</span> vRect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> tRect<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">minY</span><span class=\"token operator\">:</span> vRect<span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">-</span> tRect<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">maxY</span><span class=\"token operator\">:</span> vRect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> tRect<span class=\"token punctuation\">.</span>top\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">mousedown</code> 이벤트가 발생하면 <code class=\"language-text\">updatelimits</code>함수를 실행시키고 매번 움직일 수 있는 거리를 계산한다.</p>\n<p>그리고 <code class=\"language-text\">mousemove</code> 이벤트가 발생할 때 <code class=\"language-text\">Math.max</code>, <code class=\"language-text\">Math.min</code>을 활용해서 마우스 이동거리가 각 방향의 limit을 넘지 않도록 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// mousemove</span>\n<span class=\"token keyword\">let</span> moveX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">-</span> startX<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> moveY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">-</span> startY<span class=\"token punctuation\">;</span>\n\nmoveX <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dragLimits<span class=\"token punctuation\">.</span>minX<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>dragLimits<span class=\"token punctuation\">.</span>maxX<span class=\"token punctuation\">,</span> moveX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmoveY <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dragLimits<span class=\"token punctuation\">.</span>minY<span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>dragLimits<span class=\"token punctuation\">.</span>maxY<span class=\"token punctuation\">,</span> moveY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> newPosX <span class=\"token operator\">=</span> moveX <span class=\"token operator\">+</span> initialX\n<span class=\"token keyword\">let</span> newPosY <span class=\"token operator\">=</span> moveY <span class=\"token operator\">+</span> initialY</code></pre></div>\n</br>\n끝!","frontmatter":{"title":"JS 줌 앤 팬(Zoom and Pan) 구현하기(2)","date":"April 29, 2024","description":"바닐라 자바스크립트로 줌 앤 팬 기능 구현해보기","tags":["JavaScript"]}},"previous":{"fields":{"slug":"/zoom and pan/"},"frontmatter":{"title":"JS 줌 앤 팬(Zoom and Pan) 구현하기(1)"}},"next":{"fields":{"slug":"/db-datesearch/"},"frontmatter":{"title":"MongoDB 날짜 검색 (feat.React, express)"}}},"pageContext":{"id":"517732dd-55e8-5a7e-8c38-3042a26f3b3d","previousPostId":"7ca95fed-c843-5300-ae8a-97ab048de0e2","nextPostId":"437b9e14-da7d-53d9-ac4d-1cb89faa1e4c"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}