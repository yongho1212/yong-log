<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[용의 기술 블로그]]></description><link>https://yonglog.netlify.app</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 16 May 2024 07:42:48 GMT</lastBuildDate><item><title><![CDATA[JS 줌 앤 팬(Zoom and Pan) 구현하기(2)]]></title><description><![CDATA[지난 포스트에 이어 나머지 기능도 구현해보자.

이번엔 드래그와 드래그 시 경계를 벗어나지 않도록하는 bounding 기능을 구현해보겠다.
 드래그 기능자체는 일반 Drag 기능과 크게 다르지 않았다.

 우선 드래그 시작시 마우스 좌표와 target…]]></description><link>https://yonglog.netlify.app/zoom and pan 2/</link><guid isPermaLink="false">https://yonglog.netlify.app/zoom and pan 2/</guid><pubDate>Mon, 29 Apr 2024 22:12:03 GMT</pubDate><content:encoded>&lt;/br&gt;
&lt;p&gt;지난 포스트에 이어 나머지 기능도 구현해보자.
&lt;/br&gt;
이번엔 드래그와 드래그 시 경계를 벗어나지 않도록하는 bounding 기능을 구현해보겠다.
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;드래그 기능자체는 일반 Drag 기능과 크게 다르지 않았다.
&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;우선 드래그 시작시 마우스 좌표와 target의 좌표를 저장할 변수를 생성하고
&lt;/br&gt;
&lt;code class=&quot;language-text&quot;&gt;mousedown&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;mousemove&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;mouseup&lt;/code&gt; 각 이벤트에 대해 로직을 추가해준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//mouse&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; startX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; startY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//target&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; initialX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; initialY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; scale &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; tempX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tempY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;    viewer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;mousedown&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        startX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        startY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        isDragging &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;현재 마우스 위치에서 초기 마우스 위치를 빼서 이동한 거리 &lt;code class=&quot;language-text&quot;&gt;moveX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;moveY&lt;/code&gt;를 계산한다.
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;이 값을 초기 위치에 더해 &lt;code class=&quot;language-text&quot;&gt;target&lt;/code&gt;이 이동할 새 위치&lt;code class=&quot;language-text&quot;&gt;newPosX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;newPosY&lt;/code&gt;를 계산하고, 이를 &lt;code class=&quot;language-text&quot;&gt;transform&lt;/code&gt; 스타일을 통해 적용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;viewer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;mousemove&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isDragging&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; moveX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; startX&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; moveY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; startY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; newPosX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; moveX &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; initialX
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; newPosY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; moveY &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; initialY

        target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transform &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;translateX(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;newPosX&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px) translateY(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;newPosY&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px) scale(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;scale&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
        tempX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; newPosX
        tempY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; newPosY
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;newPosX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;newPosY&lt;/code&gt; 는 mousemove가 실행되는 동안은 &lt;code class=&quot;language-text&quot;&gt;tempX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;tempY&lt;/code&gt;에 저장된다.
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;이후 mouseup 이벤트가 발생하면 &lt;code class=&quot;language-text&quot;&gt;tempX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;tempY&lt;/code&gt;에 있는 값들을 &lt;code class=&quot;language-text&quot;&gt;initialX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;initialY&lt;/code&gt;에 저장한다.
&lt;/br&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;mouseup&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isDragging&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        initialX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tempX&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        initialY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tempY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        isDragging &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cursor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;grab&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그럼 요렇게 드래그는 잘 동작한다!
&lt;/br&gt;
근데 &lt;code class=&quot;language-text&quot;&gt;target&lt;/code&gt;의 모서리가가 &lt;code class=&quot;language-text&quot;&gt;viewer&lt;/code&gt;의 모서리 안쪽까지 드래그 되는것을 볼 수 있다.&lt;/p&gt;
&lt;img src=&quot;https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/zoom+and+pan/bound.gif&quot; width=&quot;1000&quot; height=&quot;400&quot;&gt;
&lt;br&gt;
&lt;p&gt;그럼 이제 bounding을 적용해보자.
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;우선 &lt;code class=&quot;language-text&quot;&gt;updateLimits&lt;/code&gt; 라는 함수를 만든다.
&lt;/br&gt;
함수가 실행되면 &lt;code class=&quot;language-text&quot;&gt;viewer&lt;/code&gt;의 모서리에서 &lt;code class=&quot;language-text&quot;&gt;target&lt;/code&gt;의 모서리까지 상하좌우로 움직일 수 있는 거리를 계산하고 객체로 변수에 그 값을 저장할것이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; dragLimits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;updateLimits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; vRect &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; viewer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; tRect &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    dragLimits &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;minX&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; vRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;right &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; tRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;right&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;maxX&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; vRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;left &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; tRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;left&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;minY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; vRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bottom &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; tRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bottom&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;maxY&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; vRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;top &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; tRect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;top
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;mousedown&lt;/code&gt; 이벤트가 발생하면 &lt;code class=&quot;language-text&quot;&gt;updatelimits&lt;/code&gt;함수를 실행시키고 매번 움직일 수 있는 거리를 계산한다.&lt;/p&gt;
&lt;p&gt;그리고 &lt;code class=&quot;language-text&quot;&gt;mousemove&lt;/code&gt; 이벤트가 발생할 때 &lt;code class=&quot;language-text&quot;&gt;Math.max&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;Math.min&lt;/code&gt;을 활용해서 마우스 이동거리가 각 방향의 limit을 넘지 않도록 설정한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// mousemove&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; moveX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; startX&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; moveY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; startY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

moveX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dragLimits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;minX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dragLimits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;maxX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; moveX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
moveY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dragLimits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;minY&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dragLimits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;maxY&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; moveY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; newPosX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; moveX &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; initialX
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; newPosY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; moveY &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; initialY&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/br&gt;
끝!</content:encoded></item><item><title><![CDATA[JS 줌 앤 팬(Zoom and Pan) 구현하기(1)]]></title><description><![CDATA[지난 프로젝트에서 개발했던 주요 기능중 하나는 웹 메거진을 보는 pdf viewer…]]></description><link>https://yonglog.netlify.app/zoom and pan/</link><guid isPermaLink="false">https://yonglog.netlify.app/zoom and pan/</guid><pubDate>Fri, 26 Apr 2024 22:12:03 GMT</pubDate><content:encoded>&lt;/br&gt;
&lt;p&gt;지난 프로젝트에서 개발했던 주요 기능중 하나는 웹 메거진을 보는 pdf viewer에 스크롤을 통한 확대 축소 및 드래그를 통한 탐색 기능이었다.
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;당시에는 시간에 쫓겨 라이브러리로 구현했지만 이번 기회에 줌 앤 팬 기능을 바닐라 자바스크립트로 직접 구현해볼것이다.
&lt;/br&gt;&lt;/p&gt;
&lt;img src=&quot;https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/zoom+and+pan/panzoom.gif&quot; width=&quot;1000&quot; height=&quot;400&quot;&gt;
&lt;img src=&quot;https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/zoom+and+pan/target.png&quot; width=&quot;1000&quot; height=&quot;400&quot;&gt;
&lt;br&gt;
&lt;h3&gt;구현해야할 기능들&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;-wheel을 통한 scale 변경&lt;/li&gt;
&lt;li&gt;-drag 기능&lt;/li&gt;
&lt;li&gt;-bound 기능&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;
&lt;p&gt;정리하면 마위스 휠을 통해 scale을 조절하여 zoom-in, zoom-out 기능을 구현해야하고&lt;/p&gt;
&lt;p&gt;확대가 된 상태에서 drag를 통해 viewer 영역 밖에 있는 컨텐츠를 탐색이 가능해야한다.&lt;/p&gt;
&lt;p&gt;마지막으로 드래그시 컨텐츠의 모서리가 viewer 모서리보다 안으로 들어오면 안된다.&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;먼저 컨텐츠가 담겨있는 요소는 &lt;code class=&quot;language-text&quot;&gt;#target&lt;/code&gt;으로 사용자가 보는 영역은 &lt;code class=&quot;language-text&quot;&gt;#viewer&lt;/code&gt;로 아이디 값을 지정해 주었다.&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;이제 wheel을 통한 scale변경을 구현해보자.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;viewer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;wheel&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; rect &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; viewer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; mouseX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;left&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; mouseY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;top&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; deltaScale &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sign&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;deltaY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.05&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; newScale &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; scale &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; deltaScale&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        scale &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; newScale&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transformOrigin &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;mouseX&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;mouseY&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transform &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;scale(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;scale&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;처음에는 단순히 &lt;code class=&quot;language-text&quot;&gt;e.clientX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;e.clientY&lt;/code&gt;로 좌표를 받고 그 좌표를 &lt;code class=&quot;language-text&quot;&gt;transformOrigin&lt;/code&gt;으로 설정하여 &lt;code class=&quot;language-text&quot;&gt;scale&lt;/code&gt;을 변경하고자 했다.
&lt;/br&gt;
이렇게 하면 zoom-in, zoom-out는 잘 동작한다.&lt;/p&gt;
&lt;p&gt;문제는 드래그로 &lt;code class=&quot;language-text&quot;&gt;target&lt;/code&gt;의 위치를 이동시킬 때 &lt;code class=&quot;language-text&quot;&gt;transform&lt;/code&gt;의 &lt;code class=&quot;language-text&quot;&gt;translate&lt;/code&gt;을 이용해서 이동시키는데
scale을 변경하고 첫 드래그 시 target의 위치정보가 없어서 점프하는 현상이 일어났다.&lt;/p&gt;
&lt;img src=&quot;https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/zoom+and+pan/pan+jump.gif&quot; width=&quot;1000&quot; height=&quot;400&quot;&gt;
&lt;br&gt;
&lt;p&gt;그래서 &lt;code class=&quot;language-text&quot;&gt;transform-origin&lt;/code&gt;을 직접 구현해줬다.&lt;/p&gt;
&lt;br&gt;
&lt;img src=&quot;https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/zoom+and+pan/tr1.png&quot; width=&quot;1000&quot; height=&quot;300&quot;&gt;
&lt;br&gt;
&lt;p&gt;우선 viewer 중앙 우측 상단에 휠 이벤트를 발생시켜보자. (초록책 점)&lt;/p&gt;
&lt;br&gt;
&lt;img src=&quot;https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/zoom+and+pan/tr2.png&quot; width=&quot;1000&quot; height=&quot;300&quot;&gt;
&lt;br&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;transform-origin&lt;/code&gt; 속성의 기본 값은 50% 50%이기 때문에 중앙을 기준으로 확대된다.&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;우측 상단을 기준으로 확대되는것 처럼 보이게 하려면 target이 좌측 하단 화살표만큼 움직여줘야한다.&lt;/p&gt;
&lt;br&gt;
&lt;img src=&quot;https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/zoom+and+pan/tr3.png&quot; width=&quot;1000&quot; height=&quot;300&quot;&gt;
&lt;/br&gt;
&lt;h3&gt;그럼 어떻게 얼마만큼 움직여야할까?&lt;/h3&gt;
&lt;/br&gt;
&lt;p&gt;현재 scale변경은 viewer의 중앙점을 기준으로 이루어진다. 즉 중앙이 겹쳐있는 상태에서 x축을 기준으로 오른쪽으로 움직이면 +, 왼쪽으로 움직이면 -, y축은 아래로 움직이면 +, 위로 움직이면 -가 된다.&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;이미지 2번에서 3번으로 변하려면 target이 좌하단으로 이동해야한다.
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;우선 스크롤 이벤트가 발생환 좌표와 viewer의 중앙좌표 사이의 거리를 구하고 현재 scale - 1한 값을 곱한다.
&lt;/br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;여기서 newScale - 1은 새로운 스케일과 기본 스케일의 차이이다.&lt;/br&gt;
newScale이 1보다 클 때, -1을 하면 확대된 정도만큼만 계산하게 된다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/br&gt;
&lt;p&gt;또한 다시 scale을 1로 돌려놓을 때 viewer 와 target이 일치하도록 하는 로직을 추가해준다.&lt;/p&gt;
&lt;/br&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;    initialX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mouseX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;right &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;left&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;newScale &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    initialY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mouseY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;bottom &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;top&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;newScale &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;                

    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;newScale &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        initialX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        initialY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    scale &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; newScale&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;transform &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;translateX(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;initialX&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px) translateY(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;initialY&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px) scale(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;scale&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;완성!&lt;/p&gt;
&lt;p&gt;글이 길어져서 다음편에서 Drag를 구현해보겠다&lt;/p&gt;
&lt;br/&gt;</content:encoded></item><item><title><![CDATA[JS 드래그 앤 드롭(Drag and Drop) 구현하기]]></title><description><![CDATA[지난 프로젝트에서 pdf viewer 내부에서 pan and zoom 기능을 구현했다.
먼저 이번 포스트를 통해 JS로 드래그 앤 드롭을 구현할 예정이다. Drag
 먼저 마우스 이동거리 계산을 위해 mouseDown…]]></description><link>https://yonglog.netlify.app/darg-drop/</link><guid isPermaLink="false">https://yonglog.netlify.app/darg-drop/</guid><pubDate>Sat, 20 Apr 2024 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;지난 프로젝트에서 pdf viewer 내부에서 pan and zoom 기능을 구현했다.
먼저 이번 포스트를 통해 JS로 드래그 앤 드롭을 구현할 예정이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://portfolio-yong.s3.ap-northeast-2.amazonaws.com/blog/drag/drag.gif&quot; alt=&quot;Drag&quot;&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; startX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; startY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; initialX&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; initialY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;먼저 마우스 이동거리 계산을 위해 mouseDown 좌표를 저장할 변수(&lt;code class=&quot;language-text&quot;&gt;startX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;startY&lt;/code&gt;)와 드래그 하고자 하는 요소 (이하 draggable)의 초기 위치를 저장하기 위한 변수(&lt;code class=&quot;language-text&quot;&gt;initialX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;initialY&lt;/code&gt;)를 생성한다.
&lt;br/&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;draggable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;mousedown&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    startX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    startY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    initialX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; draggable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetLeft&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 요소의 현재 left 값을 저장&lt;/span&gt;
    initialY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; draggable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;offsetTop&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// 요소의 현재 top 값을 저장&lt;/span&gt;
    isDragging &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    draggable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cursor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;grabbing&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이후 draggable 요소에 &lt;code class=&quot;language-text&quot;&gt;mousedown&lt;/code&gt; eventListener를 추가해준다. &lt;br/&gt;
&lt;code class=&quot;language-text&quot;&gt;e.clientX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;e.clientY&lt;/code&gt;를 통해 mouseDown이 발생했을 때 마우스 좌표를 startX,Y값을 startX, startY에 저장하고,&lt;br/&gt;
&lt;code class=&quot;language-text&quot;&gt;offsetLeft&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;offsetTop&lt;/code&gt;을 이용해 요소의 현재 위치를 &lt;code class=&quot;language-text&quot;&gt;initialX&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;initialY&lt;/code&gt;에 저장한다. &lt;br/&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;이 코드에서는 draggable의 부모가 body이기 때문에 offsetLeft, Top을 사용했다.
상황에 따라 다르게 사용해야한다!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br/&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;mousemove&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isDragging&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; moveX &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientX &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; startX &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; initialX&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; moveY &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientY &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; startY &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; initialY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        draggable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;left &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;moveX&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        draggable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;top &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;moveY&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이번엔 mousemove 이벤트 리스너를 추가한다.
여기서 &lt;code class=&quot;language-text&quot;&gt;e.clientX&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;e.clientY&lt;/code&gt;를 사용하여 현재 마우스 위치에서 &lt;code class=&quot;language-text&quot;&gt;mousedown&lt;/code&gt; 시점의 좌표를 빼고, 초기 위치(&lt;code class=&quot;language-text&quot;&gt;initialX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;initialY&lt;/code&gt;)를 더해 최종적인 요소의 위치를 계산한다.&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;그리고 드래그 후 드랍한 위치에서 다시 드래그를 하려면 &lt;code class=&quot;language-text&quot;&gt;initialX,Y&lt;/code&gt;를 꼭 더해줘야한다. &lt;/br&gt;
&lt;code class=&quot;language-text&quot;&gt;e.clientX&lt;/code&gt; - &lt;code class=&quot;language-text&quot;&gt;startX&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;e.clientY&lt;/code&gt; - &lt;code class=&quot;language-text&quot;&gt;startY&lt;/code&gt;는 0에서부터 증가한다.&lt;/br&gt;
drop을 하고 다시 잡아끄는 순간 0이되면서 &lt;code class=&quot;language-text&quot;&gt;draggable.style.left&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;draggable.style.top&lt;/code&gt;값이 0이되면서 초기 렌더되는 위치로 돌아간다.&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;단순하게 마우스 이동거리만 계산 했다가 원하는 대로 이동하지 않았던 경험이 있다ㅠ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/br&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;mouseup&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isDragging&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        isDragging &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        draggable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cursor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;grab&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 커서 스타일 복원&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;드래그를 종료하기 위해 mouseup 이벤트를 document에 추가한다.&lt;/br&gt;
마우스 버튼을 놓을 때, isDragging 플래그를 false로 설정하여 드래그 상태를 해제하고, 커서 스타일을 원래대로 돌려놓는다. &lt;/br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;코드 &amp;#x26; 결과물&lt;/p&gt;
&lt;iframe 
    height=&quot;400&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Untitled&quot; 
    src=&quot;https://codepen.io/yongho1212/embed/gOyBjzW?default-tab=html%2Cresult&quot; 
    frameborder=&quot;no&quot; loading=&quot;lazy&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;
    &gt;
    See the Pen 
    &lt;a href=&quot;https://codepen.io/yongho1212/pen/gOyBjzW&quot;&gt;
        Untitled
    &lt;/a&gt; 
    by yongho1212 (&lt;a href=&quot;https://codepen.io/yongho1212&quot;&gt;@yongho1212&lt;/a&gt;)
    on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;</content:encoded></item></channel></rss>